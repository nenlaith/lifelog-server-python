# coding: utf-8

from __future__ import absolute_import

from datetime import date, datetime  # noqa: F401
from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model

from swagger_server import util
from swagger_server.models.day_descriptor import DayDescriptor  # noqa: F401,E501
from swagger_server.models.event import Event  # noqa: F401,E501
from swagger_server.models.period import Period  # noqa: F401,E501


class Span(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, span_range: str = None, span_events: List[Event] = None,
                 span_day_descriptors: List[DayDescriptor] = None, span_periods: List[Period] = None):  # noqa: E501
        """Span - a model defined in Swagger

        :param span_range: The span_range of this Span.  # noqa: E501
        :type span_range: str
        :param span_events: The span_events of this Span.  # noqa: E501
        :type span_events: List[Event]
        :param span_day_descriptors: The span_day_descriptors of this Span.  # noqa: E501
        :type span_day_descriptors: List[DayDescriptor]
        :param span_periods: The span_periods of this Span.  # noqa: E501
        :type span_periods: List[Period]
        """
        self.swagger_types = {
            'span_range': str,
            'span_events': List[Event],
            'span_day_descriptors': List[DayDescriptor],
            'span_periods': List[Period]
        }

        self.attribute_map = {
            'span_range': 'span_range',
            'span_events': 'span_events',
            'span_day_descriptors': 'span_day_descriptors',
            'span_periods': 'span_periods'
        }
        self._span_range = span_range
        self._span_events = span_events
        self._span_day_descriptors = span_day_descriptors
        self._span_periods = span_periods

    @classmethod
    def from_dict(cls, dikt) -> 'Span':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Span of this Span.  # noqa: E501
        :rtype: Span
        """
        return util.deserialize_model(dikt, cls)

    @property
    def span_range(self) -> str:
        """Gets the span_range of this Span.


        :return: The span_range of this Span.
        :rtype: str
        """
        return self._span_range

    @span_range.setter
    def span_range(self, span_range: str):
        """Sets the span_range of this Span.


        :param span_range: The span_range of this Span.
        :type span_range: str
        """

        self._span_range = span_range

    @property
    def span_events(self) -> List[Event]:
        """Gets the span_events of this Span.


        :return: The span_events of this Span.
        :rtype: List[Event]
        """
        return self._span_events

    @span_events.setter
    def span_events(self, span_events: List[Event]):
        """Sets the span_events of this Span.


        :param span_events: The span_events of this Span.
        :type span_events: List[Event]
        """

        self._span_events = span_events

    @property
    def span_day_descriptors(self) -> List[DayDescriptor]:
        """Gets the span_day_descriptors of this Span.


        :return: The span_day_descriptors of this Span.
        :rtype: List[DayDescriptor]
        """
        return self._span_day_descriptors

    @span_day_descriptors.setter
    def span_day_descriptors(self, span_day_descriptors: List[DayDescriptor]):
        """Sets the span_day_descriptors of this Span.


        :param span_day_descriptors: The span_day_descriptors of this Span.
        :type span_day_descriptors: List[DayDescriptor]
        """

        self._span_day_descriptors = span_day_descriptors

    @property
    def span_periods(self) -> List[Period]:
        """Gets the span_periods of this Span.


        :return: The span_periods of this Span.
        :rtype: List[Period]
        """
        return self._span_periods

    @span_periods.setter
    def span_periods(self, span_periods: List[Period]):
        """Sets the span_periods of this Span.


        :param span_periods: The span_periods of this Span.
        :type span_periods: List[Period]
        """

        self._span_periods = span_periods
