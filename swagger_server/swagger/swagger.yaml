openapi: 3.0.1
info:
  title: LifeLog
  contact:
    email: muenier.elliott@gmail.com
  license:
    name: MIT
    url: http://api.ellmue.dynv6.com/license
  version: 1.0.0
servers:
- url: https://api.ellmue.dynv6.com
- url: http://api.ellmue.dynv6.com
security:
- bearerAuth: []
tags:
- name: weigh
  description: Weigh made during the days
- name: pill
  description: pill that may have been taken
- name: sleep
  description: How much sleep the user did
- name: meditation
  description: How much meditation the user did
- name: drink
  description: Count every bit of liquid (water, tea, coffee)
- name: workout
  description: Describe the workout of the day
- name: mood
  description: Description of the mental state of the day.
- name: blood_test
  description: If the user did a blood_test ( blood_sugar, ketonemia )
- name: meal
  description: Every meal did during the day
- name: read
  description: session of reading during a day
- name: work
  description: session of working during a day
- name: watch
  description: session of tv watching
- name: span
  description: complete informations for a span of day, week, month or year
paths:
  /weigh:
    get:
      tags:
      - weigh
      summary: Get all weighs
      operationId: get_all_weigh
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Weigh'
        default:
          description: Invalid request
      x-openapi-router-controller: swagger_server.controllers.weigh_controller
    post:
      tags:
      - weigh
      summary: Add a new weigh
      operationId: add_weigh
      requestBody:
        description: Weigh object that needs to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Weigh'
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Weigh'
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.weigh_controller
  /weigh/{id}:
    get:
      tags:
      - weigh
      summary: get the weigh by id
      operationId: get_weigh
      parameters:
      - name: id
        in: path
        description: id of the weigh
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Weigh'
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.weigh_controller
    put:
      tags:
      - weigh
      summary: update the weigh the id specified
      operationId: update_weigh
      parameters:
      - name: id
        in: path
        description: id of the weigh
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Weigh object that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Weigh'
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Weigh'
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.weigh_controller
    delete:
      tags:
      - weigh
      summary: delete a weigh with the id specified
      operationId: delete_weigh
      parameters:
      - name: id
        in: path
        description: id of the weigh
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation Done
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.weigh_controller
  /pill:
    get:
      tags:
      - pill
      summary: Get all pills
      operationId: get_all_pill
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pill'
        default:
          description: Invalid request
      x-openapi-router-controller: swagger_server.controllers.pill_controller
    post:
      tags:
      - pill
      summary: Add a new pill
      operationId: add_pill
      requestBody:
        description: Pill object that needs to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pill'
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pill'
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.pill_controller
  /pill/{id}:
    get:
      tags:
      - pill
      summary: get a pill by id
      operationId: get_pill
      parameters:
      - name: id
        in: path
        description: id of the pill
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pill'
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.pill_controller
    put:
      tags:
      - pill
      summary: update a pill by id
      operationId: update_pill
      parameters:
      - name: id
        in: path
        description: id of the pill
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Pill object that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pill'
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pill'
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.pill_controller
    delete:
      tags:
      - pill
      summary: delete specified pill
      operationId: delete_pill
      parameters:
      - name: id
        in: path
        description: id of the pill
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation Done
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.pill_controller
  /sleep:
    get:
      tags:
      - sleep
      summary: Get all sleeps
      operationId: get_all_sleep
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sleep'
        default:
          description: Invalid request
      x-openapi-router-controller: swagger_server.controllers.sleep_controller
    post:
      tags:
      - sleep
      summary: Add a new sleep
      operationId: add_sleep
      requestBody:
        description: Sleep object that needs to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sleep'
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sleep'
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.sleep_controller
  /sleep/{id}:
    get:
      tags:
      - sleep
      summary: get a specific sleep
      operationId: get_sleep
      parameters:
      - name: id
        in: path
        description: id for the specific sleep
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sleep'
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.sleep_controller
    put:
      tags:
      - sleep
      summary: update a sleep
      operationId: update_sleep
      parameters:
      - name: id
        in: path
        description: id for the specific sleep
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Sleep object that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sleep'
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sleep'
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.sleep_controller
    delete:
      tags:
      - sleep
      summary: delete specific sleep
      operationId: delete_sleep
      parameters:
      - name: id
        in: path
        description: id for the specific sleep
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation Done
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.sleep_controller
  /drink:
    get:
      tags:
      - drink
      summary: Get all drinks
      operationId: get_all_drink
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Drink'
        default:
          description: Invalid request
      x-openapi-router-controller: swagger_server.controllers.drink_controller
    post:
      tags:
      - drink
      summary: Add a new drink
      operationId: add_drink
      requestBody:
        description: Drink object that needs to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Drink'
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Drink'
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.drink_controller
  /drink/{id}:
    get:
      tags:
      - drink
      summary: get a drink by id
      operationId: get_drink
      parameters:
      - name: id
        in: path
        description: id of the drink
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Drink'
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.drink_controller
    put:
      tags:
      - drink
      summary: update a drink
      operationId: update_drink
      parameters:
      - name: id
        in: path
        description: id of the drink
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Drink object that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Drink'
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Drink'
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.drink_controller
    delete:
      tags:
      - drink
      summary: delete specified drink
      operationId: delete_drink
      parameters:
      - name: id
        in: path
        description: id of the drink
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation Done
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.drink_controller
  /watch:
    get:
      tags:
      - watch
      summary: Get all watchs
      operationId: get_all_watch
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Watch'
        default:
          description: Invalid request
      x-openapi-router-controller: swagger_server.controllers.watch_controller
    post:
      tags:
      - watch
      summary: Add a new watch
      operationId: add_watch
      requestBody:
        description: Watch object that needs to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Watch'
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Watch'
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.watch_controller
  /watch/{id}:
    get:
      tags:
      - watch
      summary: get a watch with specific id
      operationId: get_watch
      parameters:
      - name: id
        in: path
        description: id of the specific watch
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Watch'
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.watch_controller
    put:
      tags:
      - watch
      summary: update a watch at a specific id
      operationId: update_watch
      parameters:
      - name: id
        in: path
        description: id of the specific watch
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Watch object that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Watch'
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Watch'
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.watch_controller
    delete:
      tags:
      - watch
      summary: delete a specific watch
      operationId: delete_watch
      parameters:
      - name: id
        in: path
        description: id of the specific watch
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation Done
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.watch_controller
  /work:
    get:
      tags:
      - work
      summary: Get all works
      operationId: get_all_work
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Work'
        default:
          description: Invalid request
      x-openapi-router-controller: swagger_server.controllers.work_controller
    post:
      tags:
      - work
      summary: Add a new work
      operationId: add_work
      requestBody:
        description: Work object that needs to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Work'
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Work'
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.work_controller
  /work/{id}:
    get:
      tags:
      - work
      summary: get a work with specific id
      operationId: get_work
      parameters:
      - name: id
        in: path
        description: id of the specific work
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Work'
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.work_controller
    put:
      tags:
      - work
      summary: update a work at a specific id
      operationId: update_work
      parameters:
      - name: id
        in: path
        description: id of the specific work
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Work object that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Work'
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Work'
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.work_controller
    delete:
      tags:
      - work
      summary: delete a specific work
      operationId: delete_work
      parameters:
      - name: id
        in: path
        description: id of the specific work
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation Done
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.work_controller
  /read:
    get:
      tags:
      - read
      summary: Get all reads
      operationId: get_all_read
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Read'
        default:
          description: Invalid request
      x-openapi-router-controller: swagger_server.controllers.read_controller
    post:
      tags:
      - read
      summary: Add a new read
      operationId: add_read
      requestBody:
        description: Read object that needs to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Read'
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Read'
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.read_controller
  /read/{id}:
    get:
      tags:
      - read
      summary: get a read with specific id
      operationId: get_read
      parameters:
      - name: id
        in: path
        description: id of the specific read
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Read'
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.read_controller
    put:
      tags:
      - read
      summary: update a read at a specific id
      operationId: update_read
      parameters:
      - name: id
        in: path
        description: id of the specific read
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Read object that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Read'
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Read'
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.read_controller
    delete:
      tags:
      - read
      summary: delete a specific read
      operationId: delete_read
      parameters:
      - name: id
        in: path
        description: id of the specific read
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation Done
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.read_controller
  /meditation:
    get:
      tags:
      - meditation
      summary: Get all meditations
      operationId: get_all_meditation
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meditation'
        default:
          description: Invalid request
      x-openapi-router-controller: swagger_server.controllers.meditation_controller
    post:
      tags:
      - meditation
      summary: Add a new meditation
      operationId: add_meditation
      requestBody:
        description: Meditation object that needs to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Meditation'
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meditation'
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.meditation_controller
  /meditation/{id}:
    get:
      tags:
      - meditation
      summary: get a meditation with specific id
      operationId: get_meditation
      parameters:
      - name: id
        in: path
        description: id of the specific meditation
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meditation'
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.meditation_controller
    put:
      tags:
      - meditation
      summary: update a meditation at a specific id
      operationId: update_meditation
      parameters:
      - name: id
        in: path
        description: id of the specific meditation
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Meditation object that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Meditation'
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meditation'
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.meditation_controller
    delete:
      tags:
      - meditation
      summary: delete a specific meditation
      operationId: delete_meditation
      parameters:
      - name: id
        in: path
        description: id of the specific meditation
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation Done
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.meditation_controller
  /workout:
    get:
      tags:
      - workout
      summary: Get all workouts
      operationId: get_all_workout
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Workout'
                x-content-type: application/json
        default:
          description: Invalid request
      x-openapi-router-controller: swagger_server.controllers.workout_controller
    post:
      tags:
      - workout
      summary: Add a new workout
      operationId: add_workout
      requestBody:
        description: Workout object that needs to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workout'
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workout'
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.workout_controller
  /workout/{id}:
    get:
      tags:
      - workout
      summary: get a workout by id
      operationId: get_workout
      parameters:
      - name: id
        in: path
        description: id of the workout
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workout'
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.workout_controller
    put:
      tags:
      - workout
      summary: update a workout by id
      operationId: update_workout
      parameters:
      - name: id
        in: path
        description: id of the workout
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Workout object that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workout'
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workout'
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.workout_controller
    delete:
      tags:
      - workout
      summary: delete specified workout
      operationId: delete_workout
      parameters:
      - name: id
        in: path
        description: id of the workout
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation Done
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.workout_controller
  /mood:
    get:
      tags:
      - mood
      summary: Get all moods
      operationId: get_all_mood
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Mood'
                x-content-type: application/json
        default:
          description: Invalid request
      x-openapi-router-controller: swagger_server.controllers.mood_controller
    post:
      tags:
      - mood
      summary: Add a new mood
      operationId: add_mood
      requestBody:
        description: Mood object that needs to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mood'
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mood'
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.mood_controller
  /mood/{id}:
    get:
      tags:
      - mood
      summary: get a mood by id
      operationId: get_mood
      parameters:
      - name: id
        in: path
        description: id of the mood
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mood'
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.mood_controller
    put:
      tags:
      - mood
      summary: update a mood by id
      operationId: update_mood
      parameters:
      - name: id
        in: path
        description: id of the mood
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Mood object that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mood'
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mood'
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.mood_controller
    delete:
      tags:
      - mood
      summary: delete specified mood
      operationId: delete_mood
      parameters:
      - name: id
        in: path
        description: id of the mood
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation Done
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.mood_controller
  /blood-test:
    get:
      tags:
      - blood_test
      summary: Get all blood tests
      operationId: get_all_blood_test
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BloodTest'
                x-content-type: application/json
        default:
          description: Invalid request
      x-openapi-router-controller: swagger_server.controllers.blood_test_controller
    post:
      tags:
      - blood_test
      summary: Add a new blood test
      operationId: add_blood_test
      requestBody:
        description: BloodTest object that needs to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BloodTest'
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BloodTest'
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.blood_test_controller
  /blood-test/{id}:
    get:
      tags:
      - blood_test
      summary: get a blood test by id
      operationId: get_blood_test
      parameters:
      - name: id
        in: path
        description: id of the blood test
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BloodTest'
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.blood_test_controller
    put:
      tags:
      - blood_test
      summary: update a blood test by id
      operationId: update_blood_test
      parameters:
      - name: id
        in: path
        description: id of the blood test
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: BloodTest object that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BloodTest'
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BloodTest'
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.blood_test_controller
    delete:
      tags:
      - blood_test
      summary: delete specified blood_test
      operationId: delete_blood_test
      parameters:
      - name: id
        in: path
        description: id of the blood test
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation Done
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.blood_test_controller
  /meal:
    get:
      tags:
      - meal
      summary: Get all meals
      operationId: get_all_meal
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Meal'
                x-content-type: application/json
        default:
          description: Invalid request
      x-openapi-router-controller: swagger_server.controllers.meal_controller
    post:
      tags:
      - meal
      summary: Add a new meal
      operationId: add_meal
      requestBody:
        description: Meal object that needs to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Meal'
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meal'
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.meal_controller
  /meal/{id}:
    get:
      tags:
      - meal
      summary: get a meal by id
      operationId: get_meal
      parameters:
      - name: id
        in: path
        description: id of the specific meal
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meal'
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.meal_controller
    put:
      tags:
      - meal
      summary: update a meal by id
      operationId: update_meal
      parameters:
      - name: id
        in: path
        description: id of the specific meal
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Meal object that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Meal'
      responses:
        "200":
          description: Operation Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meal'
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.meal_controller
    delete:
      tags:
      - meal
      summary: delete specified meal
      operationId: delete_meal
      parameters:
      - name: id
        in: path
        description: id of the meal
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation Done
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.meal_controller
  /today:
    get:
      tags:
      - span
      summary: get all informations for today
      operationId: get_to_day
      responses:
        "200":
          description: all informations for today
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Span'
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.span_controller
  /day/{date}:
    get:
      tags:
      - span
      summary: get all informations for a specific date
      operationId: get_day_by_date
      parameters:
      - name: date
        in: path
        description: date interested in
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: date
      responses:
        "200":
          description: all informations for the day
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Span'
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.span_controller
  /day/{number}:
    get:
      tags:
      - span
      summary: get informations about a day before today
      operationId: get_day_by_number
      parameters:
      - name: number
        in: path
        description: '{number} of days before today. if {number} = 0 it is equivalent
          to /today'
        required: true
        style: simple
        explode: false
        schema:
          maximum: 0
          type: integer
          format: int32
      responses:
        "200":
          description: all informations for the day
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Span'
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.span_controller
  /toweek:
    get:
      tags:
      - span
      summary: get all informations for this week
      operationId: get_to_week
      responses:
        "200":
          description: all informations for this year
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Span'
                x-content-type: application/json
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.span_controller
  /week/{number}:
    get:
      tags:
      - span
      summary: get all informations for the week {number} before
      operationId: get_week
      parameters:
      - name: number
        in: path
        description: |-
          - {number} = 0 => return the current week. equivalent /toweek - {number} < 0 => {number} represent how many week
            before the current one.
        required: true
        style: simple
        explode: false
        schema:
          maximum: 0
          type: integer
          format: int32
          example: -2
      responses:
        "200":
          description: all informations of the specified week
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Span'
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.span_controller
  /tomonth:
    get:
      tags:
      - span
      summary: get all informations for this month
      operationId: get_to_month
      responses:
        "200":
          description: all informations for this month
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Span'
                x-content-type: application/json
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.span_controller
  /month/{name}:
    get:
      tags:
      - span
      summary: get all the informations about a month by name
      operationId: get_month_by_name
      parameters:
      - name: name
        in: path
        description: 'the name must be in english: january, february etc... in short
          or long version (i.e. january or jan )'
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: all the informations about a month
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Span'
                x-content-type: application/json
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.span_controller
  /month/{number}:
    get:
      tags:
      - span
      summary: get all the informations about a month before this one
      operationId: get_month_by_number
      parameters:
      - name: number
        in: path
        description: if {number} = 0 it is equivalent to /tomonth. {number} < 0 =>
          {number} months before this one.
        required: true
        style: simple
        explode: false
        schema:
          maximum: 0
          type: integer
          format: int32
          example: -3
      responses:
        "200":
          description: all the informations about a month
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Span'
                x-content-type: application/json
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.span_controller
  /toyear:
    get:
      tags:
      - span
      summary: get all informations for this year
      operationId: get_to_year
      responses:
        "200":
          description: all informations for this year
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Span'
                x-content-type: application/json
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.span_controller
  /year/{year}:
    get:
      tags:
      - span
      summary: get all the informations about a year by number
      operationId: get_year_by_number
      parameters:
      - name: year
        in: path
        description: '{number} = 19xx or 20xx'
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1970
          type: integer
          format: int32
      responses:
        "200":
          description: all the informations about a year
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Span'
                x-content-type: application/json
        default:
          description: Invalid Request
      x-openapi-router-controller: swagger_server.controllers.span_controller
components:
  schemas:
    Element:
      type: object
      properties:
        type:
          type: string
          enum:
          - period
          - event
          - day_descriptor
        uuid:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      description: abstract schema for all elements
    Period:
      description: abstract schema which inherit from Element for all elements that
        have start and finish timestamp.
      allOf:
      - $ref: '#/components/schemas/Element'
      - required:
        - period_range
        - period_type
        type: object
        properties:
          range:
            type: string
            example: '[2010-01-01 14:30, 2010-01-01 15:30]'
          period_type:
            type: string
            readOnly: true
          description:
            type: string
            example: nothing noticeable
            default: ""
        discriminator:
          propertyName: period_type
          mapping:
            workout: '#/components/schemas/Workout'
            sleep: '#/components/schemas/Sleep'
            meditation: '#/components/schemas/Meditation'
            read: '#/components/schemas/Read'
            work: '#/components/schemas/Work'
            watch: '#/components/schemas/Watch'
    Event:
      description: abstract schema which inherit from Element for all particular events.
      allOf:
      - $ref: '#/components/schemas/Element'
      - required:
        - event_type
        - timestamp
        type: object
        properties:
          timestamp:
            type: string
            format: date-time
          event_type:
            type: string
            readOnly: true
        discriminator:
          propertyName: event_type
          mapping:
            weigh: '#/components/schemas/Weigh'
            pill: '#/components/schemas/Pill'
            drink: '#/components/schemas/Drink'
            blood_test: '#/components/schemas/BloodTest'
            meal: '#/components/schemas/Meal'
    DayDescriptor:
      description: abstract schema for all descriptors for a all day.
      allOf:
      - $ref: '#/components/schemas/Element'
      - required:
        - date
        - day_descriptor_type
        type: object
        properties:
          date:
            type: string
            format: date
          day_descriptor_type:
            type: string
            readOnly: true
        discriminator:
          propertyName: day_descriptor_type
          mapping:
            mood: '#/components/schemas/Mood'
    Consumable:
      required:
      - quantity
      properties:
        added_fat:
          minimum: 0
          type: number
          format: float
          default: 0
        carbohydrates:
          minimum: 0
          type: number
          description: quantity in [g] for 100g or 100mL
          format: float
          default: 0
        quantity:
          minimum: 0
          type: number
          description: quantity in [g] or [mL]
          format: float
      description: abstract schema for drinks and meals
    Weigh:
      description: a weigh made during the day
      allOf:
      - $ref: '#/components/schemas/Event'
      - required:
        - heaviness
        type: object
        properties:
          heaviness:
            minimum: 0
            type: number
            description: quantity in [g]
            format: float
            example: 82.2
    Pill:
      description: pill taken during the day
      allOf:
      - $ref: '#/components/schemas/Event'
      - required:
        - name
        - pill_type
        type: object
        properties:
          pill_type:
            type: string
            example: vitamines
          name:
            type: string
            example: supradyn
    Drink:
      description: drink took during the day
      allOf:
      - $ref: '#/components/schemas/Event'
      - $ref: '#/components/schemas/Consumable'
      - required:
        - drink_type
        type: object
        properties:
          drink_type:
            type: string
            enum:
            - coffee
            - tea
            - water
            - lemon_water
    Workout:
      description: workout session during a day
      allOf:
      - $ref: '#/components/schemas/Period'
      - required:
        - workout_type
        type: object
        properties:
          workout_type:
            type: string
            enum:
            - cardio
            - hiit_legs
            - hiit_arms
            - hiit_abs
            - yoga
    Sleep:
      description: sleeping period
      allOf:
      - $ref: '#/components/schemas/Period'
    Meditation:
      description: session of meditation
      allOf:
      - $ref: '#/components/schemas/Period'
    Read:
      description: read session during a day
      allOf:
      - $ref: '#/components/schemas/Period'
    Work:
      description: work session during a day
      allOf:
      - $ref: '#/components/schemas/Period'
    Watch:
      description: watching something during a day
      allOf:
      - $ref: '#/components/schemas/Period'
    Mood:
      description: day descriptor of the meal state
      allOf:
      - $ref: '#/components/schemas/DayDescriptor'
      - required:
        - anxiousness
        - depress
        - description
        type: object
        properties:
          description:
            type: string
            example: tout va bien aujourd'hui
          anxiousness:
            maximum: 10
            minimum: 0
            type: integer
            format: int32
          depress:
            maximum: 10
            minimum: 0
            type: integer
            format: int32
    BloodTest:
      description: blood test took with a device
      allOf:
      - $ref: '#/components/schemas/Event'
      - required:
        - blood_test_type
        - level
        type: object
        properties:
          level:
            minimum: 0
            type: number
            description: 'ketonemia: quantity in [mmol/L], blood_sugar: quantity in
              [mg/dL]'
            format: float
            example: 2.6
          blood_test_type:
            type: string
            enum:
            - ketonemia
            - blood_sugar
    Meal:
      description: meal of the day
      allOf:
      - $ref: '#/components/schemas/Event'
      - $ref: '#/components/schemas/Consumable'
      - required:
        - ingredients
        type: object
        properties:
          ingredients:
            type: array
            items:
              $ref: '#/components/schemas/MealIngredient'
    MealIngredient:
      description: compose a meal. can be composite or single ingredient
      allOf:
      - $ref: '#/components/schemas/Consumable'
      - required:
        - ingredient_type
        - name
        type: object
        properties:
          ingredient_type:
            type: string
            example: vegetable
            enum:
            - composite
            - dairy
            - vegetable
            - meat
            - sauce
            - cereal
          name:
            type: string
            example: tomate
    Span:
      type: object
      properties:
        span_range:
          type: string
          example: '[2010-01-01, 2010-01-01]'
        span_events:
          type: array
          items:
            $ref: '#/components/schemas/EventResponse'
        span_day_descriptors:
          type: array
          items:
            $ref: '#/components/schemas/DayDescriptorResponse'
        span_periods:
          type: array
          items:
            $ref: '#/components/schemas/PeriodResponse'
      description: all the events and periods from a date to a date with every
    EventResponse:
      discriminator:
        propertyName: event_type
      oneOf:
      - $ref: '#/components/schemas/Weigh'
      - $ref: '#/components/schemas/Pill'
      - $ref: '#/components/schemas/Drink'
      - $ref: '#/components/schemas/BloodTest'
      - $ref: '#/components/schemas/Meal'
    PeriodResponse:
      discriminator:
        propertyName: period_type
      oneOf:
      - $ref: '#/components/schemas/Workout'
      - $ref: '#/components/schemas/Sleep'
      - $ref: '#/components/schemas/Meditation'
      - $ref: '#/components/schemas/Read'
      - $ref: '#/components/schemas/Work'
      - $ref: '#/components/schemas/Watch'
    DayDescriptorResponse:
      discriminator:
        propertyName: day_descriptor_type
      oneOf:
      - $ref: '#/components/schemas/Mood'
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: swagger_server.controllers.authorization_controller.check_bearerAuth

